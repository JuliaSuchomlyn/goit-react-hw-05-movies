{"version":3,"file":"static/js/211.e8ff8794.chunk.js","mappings":"oLAsDA,UAlDkB,WAChB,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiBH,GACdI,MAAK,SAAAC,GAAI,OAAIN,EAAaM,EAAjB,IACTC,MAAMC,QAAQC,IAClB,GAAE,CAACR,IAECF,EAIL,OACE,gBAAKW,UAAU,qBAAf,SACGX,EAAUY,OAAS,GAClB,wBACGZ,EACEa,MAAM,EAAG,IACTC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACH,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,EAELK,MAAM,SAGR,8CAEF,4BACE,wBACE,uBAAIL,OAEN,wCACa,uBAAIC,YAhBZF,EADN,OAwBT,uCAIP,C,8LCjDKO,EAAM,mCACNC,EAAW,gCAGJC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASnB,MAJe,2CAAH,qDAOjBoB,EAAc,mCAAG,WAAMC,GAAN,uFACLH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BM,EAD3B,oBADK,cACtBF,EADsB,yBAIrBA,EAASnB,MAJY,2CAAH,sDAOdsB,EAAY,mCAAG,WAAMd,GAAN,uFACHU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDR,EADC,oBACaO,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASnB,MAJU,2CAAH,sDAOZuB,EAAY,mCAAG,WAAMf,GAAN,uFACHU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDR,EADC,4BACqBO,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASnB,KAAKwB,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMjB,GAAN,uFACNU,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDR,EADC,4BACqBO,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASnB,KAAK0B,SAJQ,2CAAH,qD","sources":["pages/CastMovie/CastMovie.js","service/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../service/api'\n\nconst CastMovie = () => {\n  const [castMovie, setCastMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    API.getMovieCast(movieId)\n      .then(data => setCastMovie(data))\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!castMovie) {\n    return;\n  }\n\n  return (\n    <div className='container__element'>\n      {castMovie.length > 0 ? (\n        <ul>\n          {castMovie\n            .slice(0, 19)\n            .map(({ id, name, character, profile_path }) => (\n              <li key={id} >\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n            \n                    width=\"100\"\n                  />\n                ) : (\n                  <div>Image not found</div>\n                )}\n                <div>\n                  <p>\n                    <b>{name}</b>\n                  </p>\n                  <p>\n                    Character: <b>{character}</b>\n                  </p>\n                </div>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <div>No casts</div>\n      )}\n    </div>\n  );\n};\n\nexport default CastMovie;","import axios from 'axios';\n\n\nconst KEY = 'c9dafc481df732c35045adfe40da767b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};"],"names":["useState","castMovie","setCastMovie","movieId","useParams","useEffect","API","then","data","catch","console","log","className","length","slice","map","id","name","character","profile_path","src","alt","width","KEY","BASE_URL","getTrandingMovies","axios","response","getMoviesQuery","query","getMovieById","getMovieCast","cast","getMovieReviews","results"],"sourceRoot":""}